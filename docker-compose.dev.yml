version: '3.9'

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: on-failure
    command: --default-authentication-plugin=mysql_native_password
    env_file:
      - .docker-compose.env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: "%"
    volumes:
      - "db-data:/var/lib/mysql"
      - "./mysql/scripts:/docker-entrypoint-initdb.d/:ro"
      - "./mysql/conf.d:/etc/mysql/conf.d:ro"
    ports:
      - "127.0.0.1:3306:3306"
  spiderify-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        FLASK_ENV: production
    image: spiderify-api:${TAG:-local}
    container_name: spiderify-api
    restart: unless-stopped
    tty: true
    stdin_open: true
    command: ["python3", "app.py"]
    # if You Want To Serve Your Model Embedded In Your API Backend UnCommnet These Configs
    # volumes:
    #   - "./common/sentiment_model/1:/app/common/sentiment_model/1:ro"
    ports:
      - "8080:8080"
    depends_on:
      - mysql

  sentiment-api:
    image: tensorflow/serving:latest
    container_name: sentiment-api
    restart: unless-stopped
    env_file:
      - .docker-compose.env
    environment:
      MODEL_NAME: ${MODEL_NAME}
    volumes:
      - "./common/sentiment_model:/models/sentiment:ro"
    ports:
      - "127.0.0.1:8501:8501"
    depends_on:
      - spiderify-api
      - mysql

  summarization-api:
    image: summarization:local
    container_name: summarization-api
    restart: unless-stopped
    tty: true
    stdin_open: true
    command: ["uvicorn", "api:app", "--workers", "4", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - "/home/tesla/Project/SpideriFy/spiderify-summarization/model:/home/appuser/model"
    # ports:
    #   - "127.0.0.1:8000:8000"
    depends_on:
      - spiderify-api
      - mysql

volumes:
  db-data:
    driver: local
    name: db-data
    external: false

